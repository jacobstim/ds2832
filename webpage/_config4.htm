<!DOCTYPE HTML>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta charset="utf-8"/>
    <title>Configuration</title>
    <link rel="stylesheet" type="text/css" href="dscript.css">
 </head>

<body onload="startAJAX()">
    <div id="container">
            <p id="ModuleName"> ~Module~ <span style="font-size: 40%">  System Configuration </span> </p>
            <p id="devantech"> Devantech Ltd </p>
          <br>
        <div id="hr"> <hr style="width: 100%; height: 1px; background-color: #FFFFFF; border: none">  </div>
          <div id="menubar"> 
            <ul>
                <div onmouseover="StatusText(this)" onmouseout="NotifyText(this)"> <li><a href="_config.htm">Status</a></li> </div>
                <div onmouseover="NetworkText(this)" onmouseout="NotifyText(this)"><li><a href="_config2.htm">Network</a></li> </div>
                <div onmouseover="TCPIPText(this)" onmouseout="NotifyText(this)"> <li><a href="_config3.htm">TCP/IP</a></li> </div>
                <div onmouseover="RelayText(this)" onmouseout="NotifyText(this)"> <li><a href="_config5.htm">Relays</a></li> </div>
                <div onmouseover="IOText(this)" onmouseout="NotifyText(this)"> <li><a href="_config7.htm">Input/Output</a></li> </div>
                <div onmouseover="dSxText(this)" onmouseout="NotifyText(this)"> <li><a href="_config6.htm">dSx Config</a></li> </div>
                <div onmouseover="SequenceText(this)" onmouseout="NotifyText(this)"> <li><a href="_config14.htm">Sequencer</a></li> </div>
                <div onmouseover="ScheduleText(this)" onmouseout="NotifyText(this)"> <li><a href="_config11.htm">Scheduler</a></li> </div>
                <div onmouseover="CounterText(this)" onmouseout="NotifyText(this)"> <li><a href="_config12.htm">Counter/Timer</a></li> </div>
                <div onmouseover="NotifyText(this)"> <li><a style="background-color: #8090a0;" href="_config4.htm">Event Notification</a></li> </div>
                <div onmouseover="P2PText(this)"onmouseout="NotifyText(this)"> <li><a href="_config10.htm">Peer to Peer</a></li> </div>
                <div onmouseover="EasyMailText(this)" onmouseout="NotifyText(this)"> <li><a href="_config9.htm">Email</a></li> </div>
                <div onmouseover="PingText(this)" onmouseout="NotifyText(this)"> <li><a href="_config8.htm">Ping</a></li> </div>
                <div onmouseover="AppText(this)" onmouseout="NotifyText(this)"> <li><a href="index.htm">Application Page</a></li> </div>
            </ul>
        </div>

       <div id="centerblock">
            <div>
                <div onmouseover="NotiEventText(this)" onmouseout="NotifyText(this)">
                    <div class="item-line"> Event Triggers </div>
                    <input style="width:250px; margin:5px;" type="text" value = "~System_Noti_Event~" onkeyup="newAJAXCommand('dscript.cgi?System_Noti_Event='+encodeURIComponent(this.value));">
                </div>
                <div onmouseover="NotiIPText(this)" onmouseout="NotifyText(this)">
                    <div class="item-line"> Target IP </div>
                    <input style="width:250px; margin:5px;" type="text" value = "~System_Noti_IP~" onkeyup="newAJAXCommand('dscript.cgi?System_Noti_IP='+document.getElementById('IP').value);" id="IP">
                </div>
                <div onmouseover="NotiPortText(this)" onmouseout="NotifyText(this)">
                    <div class="item-line"> Target Port </div>
                    <input style="width:250px; margin:5px;" type="text" value = "~System_Noti_Port~" onkeyup="newAJAXCommand('dscript.cgi?System_Noti_Port='+encodeURIComponent(document.getElementById('Port').value));" id="Port">
                </div>
                <div onmouseover="NotiTimeoutText(this)" onmouseout="NotifyText(this)">
                    <div class="item-line"> TCP/IP Timeout. </div>
                    <input style="width:250px; margin:5px;" type="text" value = "~System_Noti_Timeout~" onkeyup="newAJAXCommand('dscript.cgi?System_Noti_Timeout='+encodeURIComponent(document.getElementById('Timeout').value));" id="Timeout">
                </div>
                <div onmouseover="NotiDateText(this)" onmouseout="NotifyText(this)">
                    <div class="item-line2"> TimeStamp </div>
                    <input id="EnableTDS" name="Enable TDS" type="checkbox" ~TDSChecked~ onclick="handleTDS(this)" />
                </div>
            </div>

        <br><br>
        </div>

        <div id="helpblock">
            <div ID="help">
            </div>
            <div>
                <div class='Indicator1'>  <img class='IO' id='Pend' src='DarkOff.png'/> Update Pending </div>
            </div>
        </div>

    </div>

 <script>

NotiText(0);

function handleTDS(cb) {
    if(cb.checked) {
        newAJAXCommand('dscript.cgi?System_Noti_TDS=1');
    }
    else {
        newAJAXCommand('dscript.cgi?System_Noti_TDS=0');
    }
    newAJAXCommand('dscript.cgi?SystemCmdUpdated=1');
}

function NotifyText(x) {
    document.getElementById('help').innerHTML = "<br>Event Notification<br><br>Send an event notification to a server when any specified Relay or Input changes state.<br><br>";
}

function NotiIPText(x) {
    document.getElementById('help').innerHTML = "<br>Target IP address<br><br>This can be an IP address on your local network (LAN) or on the wider Internet.";
}

function NotiPortText(x) {
    document.getElementById('help').innerHTML = "<br>Port Number<br><br>This is the TCP/IP port number the target machine is listening on.";
}

function NotiEventText(x) {
    document.getElementById('help').innerHTML = "<br>Trigger Events<br><br>Enter the list of relays and Inputs you wish to trigger notifications. Enclose in curly braces {} for any change of state<br><br>R1 - trigger on R1 active<br>{R1} - trigger on R1 change of state<br><br>When using multiple inputs, always use curly braces and separate with '|' (or).<br>{D1|R1|D4}<br>";
}

function NotiTimeoutText(x) {
    document.getElementById('help').innerHTML = "<br>Communications Timeout<br><br>If there is no response from the remote device then communications will terminate after this time period.<br><br>5000 (5000mS = 5 Seconds) is a suitable value for a device on the LAN. <br><br>10000 for the WAN <br><br>15000 is better if going over 3G or 4G networks.";
}

function NotiDateText(x) {
    document.getElementById('help').innerHTML = "<br>TimeStamp<br><br>Includes a Time & Date stamp in the notification report";
}

function PingText(x) {
    document.getElementById('help').innerHTML = "<br>Ping<br><br>Ping to up to two remote hosts.<br><br> Used to to test if a remote system is alive and well.<br><br>";
}

function CounterText(x) {
    document.getElementById('help').innerHTML = "<br>Counter/Timers<br><br>Eight Counter/Timers.<br> Used as Counters when the count input is connected to an Input <br><br>Used as Timers when connected to the internal 1Hz clock, T1.<br><br>The 32-bit counter counts up from zero to a maximum of 2,147,483,647.";
}

function ScheduleText(x) {
    document.getElementById('help').innerHTML = "<br>Scheduler<br><br>Schedule daily events with 8 schedules, 2 events per schedule and a week day mask.";
}

function P2PText(x) {
    document.getElementById('help').innerHTML = "<br>Peer to Peer<br><br>Use inputs on this module to control relays on other dSxxxx modules which can be on your local LAN or across the internet.<br>";
}

function HostText(x) {
    document.getElementById('help').innerHTML = "<br>Host Name<br><br>A unique name for the device on your network. Use plain text such as:<br>MYMODULE";
}

function EasyMailText(x) {
    document.getElementById('help').innerHTML = "<br>Easy Mail<br><br>Send secure emails in response to selected events.";
}

function RelayText(x) {
    document.getElementById('help').innerHTML = "<br>Relay Names<br><br>These are the labels on the relay buttons on the aplication page to give each relay a unique and descriptive name. <br><br>Maximum 20 characters.";
}

function IOText(x) {
    document.getElementById('help').innerHTML = "<br>I/O Names<br><br>These are the I/O labels on the aplication page to give each I/O a unique and descriptive name. <br><br>Maximum 20 characters.";
}

function IOType(x) {
    document.getElementById('help').innerHTML = "<br>I/O Types<br><br>Configure Digital I/O with or without pull-up resistors, or analogue inputs with 4.096v or 5v reference.";
}

function StatusText(x) {
    document.getElementById('help').innerHTML = "<br>Status<br><br>Shows the current status of the module.";
}

function NetworkText(x) {
    document.getElementById('help').innerHTML = "<br>Network<br><br>Configure network IP address and associated parameters.";
}

function TCPIPText(x) {
    document.getElementById('help').innerHTML = "<br>TCP/IP<br><br>Configure the TCP/IP port and command set.";
}

function SecurityText(x) {
    document.getElementById('help').innerHTML = "<br>Webpage Security<br><br>Configure the password for webpage security.";
}

function AppText(x) {
    document.getElementById('help').innerHTML = "<br>Application<br><br>Jumps to the application webpage.";
}

function printDHCPhelp()
{
    document.getElementById('help').innerHTML = "<br>Static IP is disabled because DHCP is enabled.<br><br>Uncheck DHCP to allow static IP addresses.";
}

function SequenceText(x) {
    document.getElementById('help').innerHTML = "<br>Sequencer<br><br>A 120 step, 12 output sequencer<br><br>Delay in mS, Seconds, Minutes, Hours or Random Seconds.<br><br>Wait for specified time.<br><br>Jump, Call & Return.<br><br>Branch on Relay, Digital Input or Schedule active.";
}


</script>

<script>
function ajaxUpdate()
{
    LedStatus = getValue('FlashWritePending');
    if(LedStatus>0) document.getElementById('Pend').src = 'RedOn.png';
    else document.getElementById('Pend').src = 'DarkOff.png';
}
</script>

</body>
</html>

